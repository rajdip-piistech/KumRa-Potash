@model ShareExperience.Models.Story

<div class="container my-5">
    <div class="card shadow-sm p-4 mx-auto" style="max-width: 600px;">
        <h2 class="card-title text-center mb-4">Share Your Story</h2>

        <form asp-action="Create" method="post">
            <!-- Title -->
            <div class="mb-3">
                <label asp-for="Title" class="form-label">Title</label>
                <input asp-for="Title" class="form-control" placeholder="Enter story title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <!-- Vibe Dropdown -->
            <div class="mb-3">
                <label asp-for="Vibe" class="form-label">Vibe</label>
                <select asp-for="Vibe" class="form-select">
                    <option value="" disabled selected>Select a vibe</option>
                    <option value="Positive">Positive</option>
                    <option value="Negative">Negative</option>
                    <option value="Mixed">Mixed</option>
                </select>
                <span asp-validation-for="Vibe" class="text-danger"></span>
            </div>

            <!-- Content with CKEditor -->
            <div class="mb-3">
                <label asp-for="Content" class="form-label">Content</label>
                <textarea asp-for="Content" id="Content" class="form-control" placeholder="Tell your story..."></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
                <small id="wordCount" class="form-text text-muted">Words: 0</small>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">Submit</button>
            </div>
        </form>
    </div>
</div>


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<link href="https://cdn.ckeditor.com/ckeditor5/41.0.0/classic/ckeditor.css" rel="stylesheet">
<style>
    .card {
        transition: box-shadow 0.3s;
    }

        .card:hover {
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

    .form-control, .form-select {
        border-radius: 0.375rem;
    }

    .btn-primary {
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #005f99;
        }

    @@media (max-width: 576px) {
        .card {
            padding: 1.5rem;
        }
    }

    /* Adjust CKEditor toolbar to fit Bootstrap styling */
    .ck-editor__editable {
        min-height: 200px;
    }
</style>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js" integrity="sha512-rstIgDs0xPgmG6RX1Aba4KV5cWJbAMcvRCVmglpam9SoHZiUCyQVDdH2LPlxoHtrv17XWblE/V/PP+Tr04h9A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/additional-methods.min.js" integrity="sha512-6S5LYcn5+nYkB0OI+/+3/FNUADTKJ3fWCT4kmLAh+KLKLXwTwHLuN4rRxFFKbG4HFOJdqAMWsb9H0W0HY0S5Bow==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<!-- Fallback to local scripts if CDN fails -->
<script>
    window.jQuery || document.write('<script src="~/lib/jquery/jquery.min.js"><\/script>');
    if (!window.jQuery.fn.validate) {
        document.write('<script src="~/lib/jquery-validate/jquery.validate.min.js"><\/script>');
        document.write('<script src="~/lib/jquery-validate/additional-methods.min.js"><\/script>');
    }
</script>
<!-- Use CKEditor 5 CDN -->
<script src="https://cdn.ckeditor.com/ckeditor5/41.0.0/classic/ckeditor.js"></script>
<script>
    let editorInstance;

    // Initialize CKEditor
    ClassicEditor
        .create(document.querySelector('#Content'), {
            toolbar: [
                'undo', 'redo', '|',
                'heading', '|',
                'bold', 'italic', 'underline', '|',
                'bulletedList', 'numberedList', 'outdent', 'indent', '|',
                'link', 'blockQuote'
            ],
            height: 300
        })
        .then(editor => {
            editorInstance = editor;
            // Update word count on change
            editor.model.document.on('change:data', () => {
                updateWordCount();
                // Sync content to textarea
                document.querySelector('#Content').value = editor.getData();
            });
        })
        .catch(error => {
            console.error('CKEditor initialization failed:', error);
        });

    // Word count function
    function updateWordCount() {
        if (editorInstance) {
            const content = editorInstance.getData().replace(/(<([^>]+)>)/ig, '').trim(); // Strip HTML tags
            const wordCount = content.split(/\s+/).filter(word => word.length > 0).length;
            document.getElementById('wordCount').textContent = `Words: ${wordCount}`;
        }
    }

    // jQuery validation with CKEditor content check
    if (typeof jQuery === 'undefined') {
        console.error('jQuery is not loaded');
    } else if (!jQuery.fn.validate) {
        console.error('jQuery Validation plugin is not loaded');
    } else {
        console.log('jQuery and Validation plugin loaded, initializing form validation');
        jQuery(document).ready(function($) {
            $("form").validate({
                rules: {
                    Title: {
                        required: true,
                        minlength: 3
                    },
                    Vibe: {
                        required: true
                    },
                    Content: {
                        required: true,
                        minlength: function(element) {
                            if (editorInstance) {
                                const text = editorInstance.getData().replace(/(<([^>]+)>)/ig, '').trim();
                                return text.length >= 10;
                            }
                            return false;
                        }
                    }
                },
                messages: {
                    Title: {
                        required: "Please enter a title.",
                        minlength: "Title must be at least 3 characters long."
                    },
                    Vibe: {
                        required: "Please select a vibe."
                    },
                    Content: {
                        required: "Please enter your story.",
                        minlength: "Content must be at least 10 characters long."
                    }
                },
                errorElement: "span",
                errorPlacement: function(error, element) {
                    error.addClass("text-danger");
                    error.insertAfter(element);
                },
                submitHandler: function(form) {
                    if (editorInstance) {
                        document.querySelector('#Content').value = editorInstance.getData();
                    }
                    form.submit();
                }
            });
        });
    }
</script>
